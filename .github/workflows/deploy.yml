name: CD â€“ Deploy Online Shop (Client)

on:
  push:
    branches: [ master, develop, feature/** ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ BUILD â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
  build-client:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref == 'refs/heads/master' && 'prod' || 'dev' }}

    outputs:
      tag: ${{ steps.build.outputs.tag }}

    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: build
        name: Build & push multi-arch image
        run: |
          chmod +x ci/build-publish.sh
          ./ci/build-publish.sh "$ENVIRONMENT"      # scriptul scrie tag=$TAG Ã®n GITHUB_OUTPUT

  # â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ DEPLOY (master) â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
#  deploy-ec2:
#    needs: build-client
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Update tag & restart client
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host:     ${{ secrets.EC2_HOST }}
#          username: ${{ secrets.EC2_USER }}
#          key:      ${{ secrets.EC2_SSH_KEY }}
#          script: |
#            set -euo pipefail
#
#            ENV_FILE=/srv/online-shop/.env
#            NEW_TAG="${{ needs.build-client.outputs.tag }}"
#
#            echo "ðŸ”„  Set CLIENT_TAG=$NEW_TAG"
#            if grep -q '^CLIENT_TAG=' "$ENV_FILE"; then
#              sudo sed -i "s/^CLIENT_TAG=.*/CLIENT_TAG=$NEW_TAG/" "$ENV_FILE"
#            else
#              echo "CLIENT_TAG=$NEW_TAG" | sudo tee -a "$ENV_FILE"
#            fi
#
#            echo "ðŸš¢  Pull & restart client"
#            # dacÄƒ fiÈ™ierul tÄƒu se numeÈ™te docker-compose.yml, schimbÄƒ extensia aici
#            sudo docker compose -f /srv/online-shop/docker-compose.yaml pull client
#            sudo docker compose -f /srv/online-shop/docker-compose.yaml up -d --no-deps client
